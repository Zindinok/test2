{"name":"Compendium to Table","permission":{"default":0,"UuKyfuxPPbup93Jp":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.L9FRzbEnXLS89pPm"}},"scope":"global","command":"/* \n * Macro: GeekDad's Compendium to Table Script\n * Version: 1\n * Updated: 02-12-2020\n * Description: A nice friendly UI that takes a compendium and appends it to a table.\n*/\n\nfunction getPackNames() {\n let packs = [];\n let keys = game.packs.keys();\n let done = false;\n while (!done) {\n  let key = keys.next();\n  done = key.done;\n  if (!done) {\n   let pack = game.packs.get(key.value);\n   if (pack.metadata.entity === \"Item\") {\n    packs.push({ key: key.value, name: pack.metadata.label });\n   }\n  }\n }\n return packs;\n}\n\nfunction getTableNames() {\n let tables = [];\n game.tables.entities.forEach(table => {\n  tables.push({ key: table.id, name: table.name });\n });\n\n return tables;\n}\n\nasync function convertToTable(packKey, tableKey) {\n  let pack = game.packs.get(packKey);\n  let table = game.tables.get(tableKey);\n\n  const entityType = \"Compendium\";\n  await pack.getIndex();\n  let range = 0;\n\n  const results = pack.index.map(i => {\n   range++;\n   return {\n    text: i.name,\n    type: 2,\n    collection: packKey,\n    resultId: i._id,\n    img: i.img,\n    weight: 1,\n    range: [range, range],\n    drawn: false\n   }\n  });\n\n  await table.createEmbeddedEntity(\"TableResult\", results);\n\n  await table.update({formula: \"1d\" + results.length});\n}\n\nlet itemPacks = getPackNames();\nlet tables = getTableNames();\n\nlet content = `<form><div style=\"display: inline-block; width: 100%; margin-bottom: 10px\">\n  <p>This script will append the selected compendium to the selected table.  If you want to a new table created, create it an empty table prior to running this script.</p>\n  <label for=\"output-targetPack\" style=\"vertical-align: top; margin-right: 10px;\">Select Pack:</label>\n  <br /><select name='output-targetPack' id='output-targetPack'>`\n\nitemPacks.forEach(item => {\n content += `<option value='${item.key}'>${item.name}</option>`;\n});\n\ncontent += `</select><br/><label for=\"output-tableKey\" style=\"vertical-align: top; margin-right: 10px;\">Table Name:</label><br /><select name=\"output-tableKey\" id=\"output-tableKey\">`\n\ntables.forEach(table => {\n content += `<option value='${table.key}'>${table.name}</option>`;\n});\n\ncontent += `</select></div><br /></form>`\n\n new Dialog({\n  title: `GeekDad's Compendium to Rolltable Converter`,\n  content: content,\n  buttons: {\n   yes: {\n    icon: \"<i class='fas fa-check'></i>\",\n    label: \"Convert\",\n    callback: (html) => {\n     let packKey = html.find(\"select[name='output-targetPack']\").val();\n     let tableKey = html.find(\"select[name='output-tableKey']\").val();\n     convertToTable(packKey, tableKey);\n    }\n   },\n   no: {\n    icon: \"<i class='fas fa-times'></i>\",\n    label: 'Cancel'\n   }\n  },\n  default: \"yes\"\n }).render(true);","author":"UuKyfuxPPbup93Jp","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"YeOJ60zqZiaOVkhx"}
